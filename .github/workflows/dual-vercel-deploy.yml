# DISABLED: Using Vercel's built-in branch deployments instead
# name: Dual Vercel Deployment

# on:
#   push:
#     branches: [dev]
#   pull_request:
#     branches: [dev]

jobs:
  deploy-dev-environment:
    name: Deploy to Development Environment (dev data)
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Vercel (Development)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--env NODE_ENV=development --env SUBSCRIPTION_ENV=development --env VERCEL_ENV=development'
          alias-domains: |
            dev-wewrite.vercel.app

  deploy-preview-environment:
    name: Deploy to Preview Environment (prod data)
    runs-on: ubuntu-latest
    environment: preview
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--env NODE_ENV=production --env SUBSCRIPTION_ENV=production --env VERCEL_ENV=preview'
          alias-domains: |
            preview-wewrite.vercel.app

  notify-deployments:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-dev-environment, deploy-preview-environment]
    if: always()
    steps:
      - name: Deployment Summary
        run: |
          echo "## Dual Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Development Environment**: Uses dev_ collections" >> $GITHUB_STEP_SUMMARY
          echo "- **Preview Environment**: Uses production collections" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
