window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":14,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":16,"startTime":1752943635021,"success":false,"testResults":[{"numFailingTests":2,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1752943635573,"runtime":405,"slow":false,"start":1752943635168},"testFilePath":"/Users/jamiegray/Documents/GitHub/WeWrite/app/tests/subscriptionFlow.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSubscription Flow Testing › Subscription Status Synchronization › should auto-cancel stale subscriptions without stripeSubscriptionId\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"canceled\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 90 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 91 |\u001b[39m       \u001b[90m// Should auto-cancel if subscription is stale (older than 10 minutes)\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 92 |\u001b[39m       expect(result\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'canceled'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 93 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 94 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 95 |\u001b[39m     test(\u001b[32m'should force sync subscription status with Stripe'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mapp/tests/subscriptionFlow.test.ts\u001b[39m\u001b[0m\u001b[2m:92:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSubscription Flow Testing › Subscription Status Synchronization › should force sync subscription status with Stripe\u001b[39m\u001b[22m\n\n    Cannot find module '../services/subscriptionService' from 'app/tests/subscriptionFlow.test.ts'\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 113 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 115 |\u001b[39m       \u001b[36mconst\u001b[39m { \u001b[33mSubscriptionService\u001b[39m } \u001b[33m=\u001b[39m require(\u001b[32m'../services/subscriptionService'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mSubscriptionService\u001b[39m\u001b[33m.\u001b[39mforceSyncSubscription(user\u001b[33m.\u001b[39muid)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Resolver._throwModNotFoundError (\u001b[22m\u001b[2mnode_modules/jest-resolve/build/resolver.js\u001b[2m:427:11)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.require (\u001b[22m\u001b[2m\u001b[0m\u001b[36mapp/tests/subscriptionFlow.test.ts\u001b[39m\u001b[0m\u001b[2m:115:39)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Subscription Flow Testing","Subscription Status Synchronization"],"duration":41,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription Status Synchronization should not auto-cancel recent subscriptions without stripeSubscriptionId","status":"passed","title":"should not auto-cancel recent subscriptions without stripeSubscriptionId"},{"ancestorTitles":["Subscription Flow Testing","Subscription Status Synchronization"],"duration":4,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"canceled\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBe (/Users/jamiegray/Documents/GitHub/WeWrite/app/tests/subscriptionFlow.test.ts:92:30)"],"fullName":"Subscription Flow Testing Subscription Status Synchronization should auto-cancel stale subscriptions without stripeSubscriptionId","status":"failed","title":"should auto-cancel stale subscriptions without stripeSubscriptionId"},{"ancestorTitles":["Subscription Flow Testing","Subscription Status Synchronization"],"duration":9,"failureMessages":["Error: Cannot find module '../services/subscriptionService' from 'app/tests/subscriptionFlow.test.ts'\n    at Resolver._throwModNotFoundError (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-resolve/build/resolver.js:427:11)\n    at Resolver.resolveModule (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-resolve/build/resolver.js:358:10)\n    at Resolver._getVirtualMockPath (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-resolve/build/resolver.js:619:14)\n    at Resolver._getAbsolutePath (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-resolve/build/resolver.js:587:14)\n    at Resolver.getModuleID (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-resolve/build/resolver.js:530:31)\n    at Runtime._shouldMockCjs (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-runtime/build/index.js:1713:37)\n    at Runtime.requireModuleOrMock (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-runtime/build/index.js:1045:16)\n    at Object.require (/Users/jamiegray/Documents/GitHub/WeWrite/app/tests/subscriptionFlow.test.ts:115:39)\n    at Promise.then.completed (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Subscription Flow Testing Subscription Status Synchronization should force sync subscription status with Stripe","status":"failed","title":"should force sync subscription status with Stripe"},{"ancestorTitles":["Subscription Flow Testing","Subscription Creation"],"duration":2,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription Creation should create basic subscription successfully","status":"passed","title":"should create basic subscription successfully"},{"ancestorTitles":["Subscription Flow Testing","Subscription Creation"],"duration":0,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription Creation should create premium subscription successfully","status":"passed","title":"should create premium subscription successfully"},{"ancestorTitles":["Subscription Flow Testing","Subscription Creation"],"duration":1,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription Creation should handle subscription creation errors","status":"passed","title":"should handle subscription creation errors"},{"ancestorTitles":["Subscription Flow Testing","Subscription Activation"],"duration":1,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription Activation should activate subscription and allocate tokens","status":"passed","title":"should activate subscription and allocate tokens"},{"ancestorTitles":["Subscription Flow Testing","Subscription Activation"],"duration":1,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription Activation should handle subscription activation failures","status":"passed","title":"should handle subscription activation failures"},{"ancestorTitles":["Subscription Flow Testing","Subscription State Changes"],"duration":1,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription State Changes should handle subscription cancellation","status":"passed","title":"should handle subscription cancellation"},{"ancestorTitles":["Subscription Flow Testing","Subscription State Changes"],"duration":1,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription State Changes should handle failed payment recovery","status":"passed","title":"should handle failed payment recovery"},{"ancestorTitles":["Subscription Flow Testing","Subscription State Changes"],"duration":1,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription State Changes should handle subscription reactivation","status":"passed","title":"should handle subscription reactivation"},{"ancestorTitles":["Subscription Flow Testing","Billing Cycle Processing"],"duration":1,"failureMessages":[],"fullName":"Subscription Flow Testing Billing Cycle Processing should process monthly billing and allocate new tokens","status":"passed","title":"should process monthly billing and allocate new tokens"},{"ancestorTitles":["Subscription Flow Testing","Billing Cycle Processing"],"duration":0,"failureMessages":[],"fullName":"Subscription Flow Testing Billing Cycle Processing should handle billing cycle errors gracefully","status":"passed","title":"should handle billing cycle errors gracefully"},{"ancestorTitles":["Subscription Flow Testing","Token Balance Updates"],"duration":2,"failureMessages":[],"fullName":"Subscription Flow Testing Token Balance Updates should update token balance after subscription changes","status":"passed","title":"should update token balance after subscription changes"},{"ancestorTitles":["Subscription Flow Testing","Subscription History and Audit Trail"],"duration":0,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription History and Audit Trail should include payment failure events in subscription history","status":"passed","title":"should include payment failure events in subscription history"},{"ancestorTitles":["Subscription Flow Testing","Subscription History and Audit Trail"],"duration":1,"failureMessages":[],"fullName":"Subscription Flow Testing Subscription History and Audit Trail should display payment failures prominently in subscription history UI","status":"passed","title":"should display payment failures prominently in subscription history UI"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["app/**/*.{js,jsx,ts,tsx}","!app/**/*.d.ts","!app/tests/**/*"],"coverageDirectory":"/Users/jamiegray/Documents/GitHub/WeWrite/coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":true,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/jest-html-reporters/index.js",{"publicPath":"./test-reports","filename":"jest-report.html","expand":true,"hideIcon":false}]],"rootDir":"/Users/jamiegray/Documents/GitHub/WeWrite","runTestsByPath":false,"seed":-774216270,"silent":false,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"subscriptionFlow.test.ts","testSequencer":"/Users/jamiegray/Documents/GitHub/WeWrite/node_modules/@jest/test-sequencer/build/index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1752943635582,"_reporterOptions":{"publicPath":"./test-reports","filename":"jest-report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})